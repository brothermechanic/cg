From d641d88e97edf7817aa270f53cc1c918b91b7752 Mon Sep 17 00:00:00 2001
From: salipourto <sahar.alipourkashi@amd.com>
Date: Tue, 16 Jul 2024 11:16:27 -0700
Subject: [PATCH 14/19] Building the hiprt from source on Windows; Compiling
 HIPRT kernels from source.

---
 .../build_environment/cmake/hiprt.cmake       | 59 ++++++++-----------
 build_files/cmake/Modules/FindHIP.cmake       | 20 ++++---
 intern/cycles/kernel/CMakeLists.txt           | 50 ++++++++++------
 3 files changed, 71 insertions(+), 58 deletions(-)

diff --git a/build_files/build_environment/cmake/hiprt.cmake b/build_files/build_environment/cmake/hiprt.cmake
index 9d6c87d87a5..c7e473f089d 100644
--- a/build_files/build_environment/cmake/hiprt.cmake
+++ b/build_files/build_environment/cmake/hiprt.cmake
@@ -5,55 +5,32 @@
 # Note the utility apps may use png/tiff/gif system libraries, but the
 # library itself does not depend on them, so should give no problems.
 
-if(NOT (BUILD_MODE STREQUAL Release))
-  return()
-endif()
-
-set(HIPRT_CMAKE_FLAGS ${DEFAULT_CMAKE_FLAGS})
-
 get_filename_component(_hip_path ${HIP_HIPCC_EXECUTABLE} DIRECTORY)
 get_filename_component(_hip_path ${_hip_path} DIRECTORY)
 
 set(HIPRT_EXTRA_ARGS
   -DCMAKE_BUILD_TYPE=Release
   -DHIP_PATH=${_hip_path}
-  -DBITCODE=ON
+  -DBITCODE=OFF # revert back to ON once hiprt cmake is updated to skip bake kernel for BITCODE
   -DNO_UNITTEST=ON
-  -DPRECOMPILE=ON
   -DHIPRT_PREFER_HIP_5=ON
 )
 
 set(HIPRT_SOURCE_DIR ${BUILD_DIR}/hiprt/src/external_hiprt)
 set(HIPRT_BUILD_DIR ${BUILD_DIR}/hiprt/src/external_hiprt-build)
 
-# Work around relative paths in bake kernel script and missing
-# executable permission on encryption binary.
-if(WIN32)
-  set(HIPRT_WORKAROUND
-    cd ${HIPRT_SOURCE_DIR} &&
-  )
-else()
-  set(HIPRT_WORKAROUND
-    cd ${HIPRT_SOURCE_DIR} &&
-    chmod +x ./contrib/easy-encryption/bin/linux/ee64 &&
-  )
-endif()
-
 ExternalProject_Add(external_hiprt
   URL file://${PACKAGE_DIR}/${HIPRT_FILE}
   DOWNLOAD_DIR ${DOWNLOAD_DIR}
   URL_HASH ${HIPRT_HASH_TYPE}=${HIPRT_HASH}
+  CMAKE_GENERATOR ${PLATFORM_ALT_GENERATOR}
   PREFIX ${BUILD_DIR}/hiprt
-  INSTALL_DIR ${LIBDIR}/hiprt
 
-  CONFIGURE_COMMAND
-    ${HIPRT_WORKAROUND}
-    PYTHON_BIN=${PYTHON_BINARY}
-    ${CMAKE_COMMAND} -DCMAKE_INSTALL_PREFIX=${LIBDIR}/hiprt
-    -G ${PLATFORM_ALT_GENERATOR}
-    -S ${HIPRT_SOURCE_DIR}
-    -B ${HIPRT_BUILD_DIR}
-    ${DEFAULT_CMAKE_ARGS} ${HIPRT_EXTRA_ARGS}
+  CMAKE_ARGS
+    -DCMAKE_INSTALL_PREFIX=${LIBDIR}/hiprt
+    ${HIPRT_EXTRA_ARGS}
+
+  INSTALL_DIR ${LIBDIR}/hiprt
 )
 
 if(WIN32)
@@ -61,12 +38,23 @@ if(WIN32)
   ExternalProject_Add_Step(external_hiprt after_install
     COMMAND ${CMAKE_COMMAND} -E rename
       ${LIBDIR}/hiprt/bin/hiprt${HIPRT_LIBRARY_VERSION}64.dll ${LIBDIR}/hiprt/bin/hiprt64.dll
-    DEPENDEES install
-  )
-  ExternalProject_Add_Step(external_hiprt after_install
+
     COMMAND ${CMAKE_COMMAND} -E copy_directory
       ${LIBDIR}/hiprt
       ${HARVEST_TARGET}/hiprt
+
+    COMMAND ${CMAKE_COMMAND} -E copy_directory
+      ${HIPRT_SOURCE_DIR}/hiprt/impl
+      ${HARVEST_TARGET}/hiprt/include/hiprt/impl
+
+    COMMAND ${CMAKE_COMMAND} -E copy_directory
+      ${HIPRT_SOURCE_DIR}/contrib/Orochi/ParallelPrimitives
+      ${HARVEST_TARGET}/hiprt/include/Orochi/ParallelPrimitives
+
+	COMMAND ${CMAKE_COMMAND} -E copy
+      ${HIPRT_SOURCE_DIR}/version.txt
+      ${HARVEST_TARGET}/hiprt/version.txt
+
     DEPENDEES install
   )
 else()
@@ -74,6 +62,11 @@ else()
   ExternalProject_Add_Step(external_hiprt after_install
     COMMAND ${CMAKE_COMMAND} -E rename
       ${LIBDIR}/hiprt/bin/${LIBPREFIX}hiprt${HIPRT_LIBRARY_VERSION}64.so ${LIBDIR}/hiprt/bin/${LIBPREFIX}hiprt64.so
+
+    COMMAND ${CMAKE_COMMAND} -E copy
+      ${HIPRT_SOURCE_DIR}/version.txt
+      ${LIBDIR}/hiprt/version.txt
+
     DEPENDEES install
   )
 endif()
diff --git a/build_files/cmake/Modules/FindHIP.cmake b/build_files/cmake/Modules/FindHIP.cmake
index 6240295d940..008666cabcc 100644
--- a/build_files/cmake/Modules/FindHIP.cmake
+++ b/build_files/cmake/Modules/FindHIP.cmake
@@ -37,18 +37,22 @@ find_program(HIP_HIPCC_EXECUTABLE
 )
 
 if(WIN32)
-  # Needed for HIP-RT on Windows.
-  find_program(HIP_LINKER_EXECUTABLE
-    NAMES
-      clang++
-    HINTS
-      ${_hip_SEARCH_DIRS}
+  set(LINKER clang++)
+else()
+  set(LINKER amdclang++)
+endif()
+
+find_program(HIP_LINKER_EXECUTABLE
+  NAMES
+    ${LINKER}
+  HINTS
+    ${_hip_SEARCH_DIRS}
     PATH_SUFFIXES
       bin
     NO_DEFAULT_PATH
     NO_CMAKE_PATH
-  )
-endif()
+)
+
 
 if(HIP_HIPCC_EXECUTABLE)
   set(HIP_VERSION_MAJOR 0)
diff --git a/intern/cycles/kernel/CMakeLists.txt b/intern/cycles/kernel/CMakeLists.txt
index f02b77e364b..5df1d688c94 100644
--- a/intern/cycles/kernel/CMakeLists.txt
+++ b/intern/cycles/kernel/CMakeLists.txt
@@ -696,6 +696,13 @@ if(WITH_CYCLES_DEVICE_HIPRT AND WITH_CYCLES_HIP_BINARIES)
     ${SRC_KERNEL_DEVICE_GPU_HEADERS}
     ${SRC_KERNEL_DEVICE_HIPRT_HEADERS}
     ${SRC_UTIL_HEADERS})
+  # Get HIP-RT version
+  file(STRINGS ${HIPRT_INCLUDE_DIR}/../version.txt lines)
+  list(GET lines 0 HIPRT_MAJOR_VER)
+  list(GET lines 1 HIPRT_MINOR_VER)
+  math(EXPR HIPRT_VERSION "${HIPRT_MAJOR_VER} * 1000 + ${HIPRT_MINOR_VER}")
+  set(HIPRT_VERSION 0${HIPRT_VERSION})
+
   set(cycles_bitcode_file ${CMAKE_CURRENT_BINARY_DIR}/kernel_rt_gfx.bc)
   set(sdk_bitcode_file ${CMAKE_CURRENT_BINARY_DIR}/hiprt${HIPRT_VERSION}_${HIP_VERSION_SHORT}_amd_lib.bc)
   set(bvh_file ${CMAKE_CURRENT_BINARY_DIR}/hiprt${HIPRT_VERSION}_${HIP_VERSION_SHORT}_amd.hipfb)
@@ -747,7 +754,7 @@ if(WITH_CYCLES_DEVICE_HIPRT AND WITH_CYCLES_HIP_BINARIES)
     ${target_gpus}
     ${HIP_HIPCC_FLAGS}
     -x hip
-    ${HIPRT_INCLUDE_DIR}/orochi/ParallelPrimitives/RadixSortKernels.h
+    ${HIPRT_INCLUDE_DIR}/Orochi/ParallelPrimitives/RadixSortKernels.h
     ${flags}
     -D HIPRT_BITCODE_LINKING
     -std=c++17
@@ -756,7 +763,7 @@ if(WITH_CYCLES_DEVICE_HIPRT AND WITH_CYCLES_HIP_BINARIES)
     -mllvm
     -amdgpu-function-calls=true
     --genco
-    -I ${HIPRT_INCLUDE_DIR}/orochi
+    -I ${HIPRT_INCLUDE_DIR}/Orochi
     -include hip/hip_runtime.h
     -Wno-parentheses-equality
     -Wno-unused-value
@@ -778,7 +785,7 @@ if(WITH_CYCLES_DEVICE_HIPRT AND WITH_CYCLES_HIP_BINARIES)
     --gpu-bundle-output
     -emit-llvm
     -I ${HIPRT_INCLUDE_DIR}
-    -I ${HIPRT_INCLUDE_DIR}/orochi
+    -I ${HIPRT_INCLUDE_DIR}/Orochi
     -Wno-parentheses-equality
     -Wno-unused-value
     -ffast-math
@@ -825,33 +832,42 @@ if(WITH_CYCLES_DEVICE_HIPRT AND WITH_CYCLES_HIP_BINARIES)
   add_custom_command(
     OUTPUT  ${bvh_file_oro}
     COMMAND ${hiprt_compile_command} ${hiprt_compile_flags_bvh_oro}
-    DEPENDS ${HIPRT_INCLUDE_DIR}/orochi/ParallelPrimitives/RadixSortKernels.h)
+    DEPENDS ${HIPRT_INCLUDE_DIR}/Orochi/ParallelPrimitives/RadixSortKernels.h)
 
-
-
-  set(hiprt_link_command ${CMAKE_COMMAND})
-  set(hiprt_link_flags   -E env "HIP_PATH=${HIP_ROOT_DIR}"
-    ${HIP_LINKER_EXECUTABLE})
+  if(WIN32)
+    set(hiprt_link_command ${CMAKE_COMMAND})
+    set(hiprt_link_flags
+      -E env "HIP_PATH=${HIP_ROOT_DIR}"
+      ${HIP_LINKER_EXECUTABLE})
+  else()
+    set(hiprt_link_command ${HIP_LINKER_EXECUTABLE})
+    set(hiprt_link_flags)
+  endif()
 
   set(hiprt_link_flags
     ${hiprt_link_flags}
     ${target_gpus}
     -fgpu-rdc
-    -mcode-object-version=4
     --hip-link
     --cuda-device-only
     ${cycles_bitcode_file}
     ${sdk_bitcode_file}
     -o ${hiprt_file})
- add_custom_command(
-   OUTPUT  ${hiprt_file}
-   COMMAND ${hiprt_link_command} ${hiprt_link_flags}
-   DEPENDS ${cycles_bitcode_file} ${sdk_bitcode_file})
+  add_custom_command(
+    OUTPUT  ${hiprt_file}
+    COMMAND ${hiprt_link_command} ${hiprt_link_flags}
+    DEPENDS ${cycles_bitcode_file} ${sdk_bitcode_file})
+
+  if(WIN32)
+    set(BVH_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/blender.shared)
+  else()
+    set(BVH_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/lib)
+  endif()
+
 
  delayed_install("${CMAKE_CURRENT_BINARY_DIR}" "${hiprt_file}"  ${CYCLES_INSTALL_PATH}/lib)
- delayed_install("${CMAKE_CURRENT_BINARY_DIR}" "${bvh_file}"     ${CMAKE_INSTALL_PREFIX})
- delayed_install("${CMAKE_CURRENT_BINARY_DIR}" "${bvh_file_oro}" ${CMAKE_INSTALL_PREFIX})
- delayed_install("${HIPRT_INCLUDE_DIR}/bin"   "${HIPRT_DYNAMIC_LIB}"    ${CMAKE_INSTALL_PREFIX})
+ delayed_install("${CMAKE_CURRENT_BINARY_DIR}" "${bvh_file}"     ${BVH_INSTALL_PATH})
+ delayed_install("${CMAKE_CURRENT_BINARY_DIR}" "${bvh_file_oro}" ${BVH_INSTALL_PATH})
  add_custom_target(cycles_kernel_hiprt ALL DEPENDS ${hiprt_file} ${bvh_file} ${bvh_file_oro})
  cycles_set_solution_folder(cycles_kernel_hiprt)
   add_custom_command(
-- 
2.30.2


